//
//  MediaTypeSelectorRouter.swift
//  iTunesApp
//
//  Created by Vineet Sansare on 17/12/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol MediaTypeSelectorRoutingLogic {
    func routeToSearchCriteria(userSelectedMediaTypes: [String])
}

protocol MediaTypeSelectorDataPassing {
    var dataStore: MediaTypeSelectorDataStore? { get set }
}

class MediaTypeSelectorRouter: NSObject, MediaTypeSelectorRoutingLogic, MediaTypeSelectorDataPassing {
    
    weak var viewController: MediaTypeSelectorViewController?
    var dataStore: MediaTypeSelectorDataStore?
    
    // MARK: Routing
    
    func routeToSearchCriteria(userSelectedMediaTypes: [String]) {
        guard let source = viewController,
              let destination = (viewController?.parent as! UINavigationController).viewControllers[0] as? SearchCriteriaViewController else {
            return
        }
        var destinationDS = destination.router!.dataStore!
        passDataToSearchCriteria(source: dataStore!, destination: &destinationDS)
        navigateToSearchCriteriaScreen(source: source, destination: destination)
    }
    
    // MARK: Navigation
    func navigateToSearchCriteriaScreen(source: MediaTypeSelectorViewController, destination: SearchCriteriaViewController) {
        source.navigationController?.popToViewController(destination, animated: true)
    }
    
    // MARK: Passing data
    func passDataToSearchCriteria(source: MediaTypeSelectorDataStore, destination: inout SearchCriteriaDataStore) {
        destination.mediaTypes = source.mediaTypes
    }
}
