//
//  SearchCriteriaRouter.swift
//  iTunesApp
//
//  Created by Vineet Sansare on 17/12/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol SearchCriteriaRoutingLogic {    
    func routeToMediaTypeSelector()
    func routeToSearchResults()
}

protocol SearchCriteriaDataPassing {
    var dataStore: SearchCriteriaDataStore? { get }
    func passDataToResultScreen(source: SearchCriteriaDataStore, destination: inout SearchResultsDataStore)
}

class SearchCriteriaRouter: NSObject, SearchCriteriaRoutingLogic, SearchCriteriaDataPassing {
    weak var viewController: SearchCriteriaViewController?
    var dataStore: SearchCriteriaDataStore?
    
    // MARK: Routing
    func routeToMediaTypeSelector() {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        guard let destinationVC = storyboard.instantiateViewController(withIdentifier: MediaTypeSelectorViewController.identifier) as? MediaTypeSelectorViewController else {
            return
        }
        if var destinationDS = destinationVC.router?.dataStore, let searchDataStore = dataStore {
            passDataToMediaTypeSelector(source: searchDataStore, destination: &destinationDS)
        }
        navigateToMediaTypeSelector(source: viewController!, destination: destinationVC)
    }
    
    func routeToSearchResults() {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        guard let searchResultsVC = storyboard.instantiateViewController(withIdentifier: SearchResultsViewController.identifier) as? SearchResultsViewController else {
            return
        }
        if var searchResultsDS = searchResultsVC.router?.dataStore, let searchDataStore = dataStore {
            passDataToResultScreen(source: searchDataStore, destination: &searchResultsDS)
        }
        navigateToSearchResults(source: viewController!, destination: searchResultsVC)
    }
    
    // MARK: Navigation
    func navigateToMediaTypeSelector(source: SearchCriteriaViewController, destination: MediaTypeSelectorViewController) {
        source.show(destination, sender: nil)
//        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    func navigateToSearchResults(source: SearchCriteriaViewController, destination: SearchResultsViewController) {
        source.show(destination, sender: nil)
    }
    
    // MARK: Passing data
    func passDataToMediaTypeSelector(source: SearchCriteriaDataStore, destination: inout MediaTypeSelectorDataStore) {
        destination.mediaTypes = source.mediaTypes
    }
    
    func passDataToResultScreen(source: SearchCriteriaDataStore, destination: inout SearchResultsDataStore) {
        destination.searchedItems = source.mediaObjects
        destination.types = source.mediaTypes
    }
}
