//
//  SearchResultsViewControllerTests.swift
//  iTunesApp
//
//  Created by Vineet Sansare on 22/12/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import iTunesApp
import Quick
import Nimble

class SearchResultsViewControllerTests: QuickSpec {
    
    override func spec() {
        describe("SearchResultsViewController Tests") {
            // MARK: Subject under test
            var sut: SearchResultsViewController!
            var window: UIWindow!
            var searchResultsBusinessLogicSpy: SearchResultsBusinessLogicSpy!
            
            // MARK: Test setup
            func setupSearchResultsViewController() {
                sut = SearchResultsViewController()
            }
            
            beforeEach {
                window = UIWindow(frame: UIScreen.main.bounds)
                setupSearchResultsViewController()
            }
            
            afterEach {
                window = nil
            }
            
            func loadview() {
                window.addSubview(sut.view)
                sut.beginAppearanceTransition(true, animated: false)
                sut.endAppearanceTransition()
            }
            
            // MARK: Test doubles
            class SearchResultsBusinessLogicSpy: SearchResultsBusinessLogic {
                var updateMediaCalled = false
                
                func updateMedia() {
                    updateMediaCalled = true
                }
            }
            
            //MARK: - Test
            context("when view is loaded") {
                beforeEach {
                    loadview()
                    searchResultsBusinessLogicSpy = SearchResultsBusinessLogicSpy()
                    sut.interactor = searchResultsBusinessLogicSpy
                    searchResultsBusinessLogicSpy.updateMedia()
                }
                
                it("should be a SearchResultsViewController") {
                    expect(sut).to(beAKindOf(SearchResultsViewController.self))
                }
                
                it("should call updateMedia on interactor") {
                    expect(searchResultsBusinessLogicSpy.updateMediaCalled).to(beTrue())
                }
            }
        }
    }
}
