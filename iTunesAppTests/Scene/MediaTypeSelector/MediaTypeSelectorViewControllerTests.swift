//
//  MediaTypeSelectorViewControllerTests.swift
//  iTunesApp
//
//  Created by Vineet Sansare on 22/12/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import iTunesApp
import Quick
import Nimble

class MediaTypeSelectorViewControllerTests: QuickSpec {
    
    override func spec() {
        describe("MediaTypeSelectorViewController Tests") {
            // MARK: Subject under test
            var sut: MediaTypeSelectorViewController!
            var window: UIWindow!
            var mediaTypeSelectorLogicSpy: MediaTypeSelectorBusinessLogicSpy!
            
            // MARK: Test setup
            func setupMediaTypeSelectorViewController() {
                sut = MediaTypeSelectorViewController()
            }
            
            beforeEach {
                window = UIWindow(frame: UIScreen.main.bounds)
                setupMediaTypeSelectorViewController()
            }
            
            afterEach {
                window = nil
            }
            
            func loadview() {
                window.addSubview(sut.view)
                sut.beginAppearanceTransition(true, animated: false)
                sut.endAppearanceTransition()
            }
            
            // MARK: Test doubles
            class MediaTypeSelectorBusinessLogicSpy: MediaTypeSelectorBusinessLogic {
                var updateWithSelectedMediaCalled = false
                var displaySearchCriteriaCalled = false
                
                func updateWithSelectedMedia(request: MediaTypeSelector.MediaType.Request) {
                    updateWithSelectedMediaCalled = true
                }
                
                func displaySearchCriteria(request: MediaTypeSelector.MediaType.Request) {
                    displaySearchCriteriaCalled = true
                }
            }
            
            //MARK: - Test
            context("when view is loaded") {
                beforeEach {
                    loadview()
                    mediaTypeSelectorLogicSpy = MediaTypeSelectorBusinessLogicSpy()
                    sut.interactor = mediaTypeSelectorLogicSpy
                    let request = MediaTypeSelector.MediaType.Request(mediaTypes: ["Album","Artist","Book","Movie","Music Video","Podcast","Song"])
                    sut.interactor?.updateWithSelectedMedia(request: request)
                }
                
                it("should be a SearchResultsViewController") {
                    expect(sut).to(beAKindOf(MediaTypeSelectorViewController.self))
                }
                
                it("should call updateMedia on interactor") {
                    expect(mediaTypeSelectorLogicSpy.updateWithSelectedMediaCalled).to(beTrue())
                }
            }
        }
    }
}
